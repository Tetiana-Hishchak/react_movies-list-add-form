{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/Service/RegularFunction.ts","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","pattern","RegExp","TextField","name","value","_ref$label","label","_ref$placeholder","placeholder","concat","_ref$required","required","_ref$onChange","onChange","_useState","useState","Math","random","toFixed","slice","id","_slicedToArray","_useState3","_useState4","touched","setTouched","_useState5","_useState6","errorMessage","setErrorMessage","hasError","htmlFor","type","classNames","event","onBlur","match","initialMovieState","NewMovie","onAdd","_useState2","count","setCount","setMovie","handleMovieChange","key","prevMovie","_objectSpread","_defineProperty","target","isFormValid","newMovie","trim","onSubmit","preventDefault","prev","disabled","App","moviesFromServer","currentMovie","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0dcf663.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","export const pattern = new RegExp(\n  '^('\n    + '((([A-Za-z]{3,9}:(?:\\\\/\\\\/)?)'\n    + '(?:[-;:&=+$,\\\\w]+@)?'\n    + '[A-Za-z0-9.-]+)|'\n    + '(?:www\\\\.|[-;:&=+$,\\\\w]+@)'\n    + '[A-Za-z0-9.-]+)'\n    + '((?:\\\\/[+~%\\\\/.\\\\w-_]*)?'\n    + '\\\\??(?:[-+=&;%@,.\\\\w_]*)#?(?:[,.!/\\\\\\\\\\\\w]*))?'\n    + ')$',\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { pattern } from '../Service/RegularFunction';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const hasError = touched && required && !value;\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(event);\n    setErrorMessage('');\n  };\n\n  const handleOnBlur = () => {\n    if (value === '' && name !== 'description') {\n      setErrorMessage(`${label} is required`);\n    }\n\n    if ((name === 'imgUrl' && !value.match(pattern) && value !== '')\n    || (name === 'imdbUrl' && !value.match(pattern) && value !== '')) {\n      setErrorMessage(`${label} is not a valid URL`);\n    }\n\n    setTouched(true);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || errorMessage,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={handleOnChange}\n          onBlur={handleOnBlur}\n        />\n      </div>\n\n      {(hasError || errorMessage) && (\n        <p className=\"help is-danger\">{errorMessage}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\nimport { pattern } from '../Service/RegularFunction';\n\nconst initialMovieState: Movie = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [movie, setMovie] = useState<Movie>(initialMovieState);\n  const handleMovieChange = (event: React.ChangeEvent<HTMLInputElement>,\n    key: string) => {\n    setMovie(prevMovie => ({ ...prevMovie, [key]: event.target.value }));\n  };\n\n  const isFormValid = (newMovie: Movie): boolean => {\n    if (!newMovie.title.trim() || !newMovie.imgUrl.trim()\n    || !newMovie.imdbId.trim() || !newMovie.imdbUrl.trim()) {\n      return false;\n    }\n\n    if ((!newMovie.imgUrl.match(pattern) && newMovie.imgUrl !== '')\n    || (!newMovie.imdbUrl.match(pattern) && newMovie.imdbUrl !== '')) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!isFormValid(movie)) {\n      return;\n    }\n\n    onAdd(movie);\n    setCount(prev => prev + 1);\n    setMovie(initialMovieState);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={movie.title}\n        required\n        onChange={event => handleMovieChange(event, 'title')}\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={movie.description}\n        onChange={event => handleMovieChange(event, 'description')}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={movie.imgUrl}\n        required\n        onChange={event => handleMovieChange(event, 'imgUrl')}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={movie.imdbUrl}\n        required\n        onChange={event => handleMovieChange(event, 'imdbUrl')}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={movie.imdbId}\n        required\n        onChange={event => handleMovieChange(event, 'imdbId')}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isFormValid(movie)}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movie, setMovie] = useState(moviesFromServer);\n  const addMovie = (newMovie: Movie) => {\n    setMovie(currentMovie => [...currentMovie, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movie} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}